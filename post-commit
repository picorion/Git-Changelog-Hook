#!/bin/sh

# target file for storing the changelog
CHANGELOG_FILE="CHANGELOG.md"

# use an environment variable to check wether the hook has already been executed to prevent recursion!
if [ -z "$ALREADY_RUN"]
then
    export ALREADY_RUN=1
else
    unset ALREADY_RUN
    exit 0
fi

# JSON-like format for git log
FORMAT='{"commit_hash": "%H", "short_hash": "%h", "refs": "%D", "subject": "%s", "sanitized_subject_line": "%f", "body": "%b", "author": {"name": "%aN", "email": "%aE", "date": "%aI"}, "commiter": {"name": "%cN", "email": "%cE", "date": "%cI"} }'
# get last commit, parse it to json and escape new lines
COMMIT="[$(git --no-pager log -1 HEAD --no-merges --format="$FORMAT" | sed -r ':a;N;$!ba;s/\r{0,1}\n/\\n/g' | sed 's/}\\n{/},{/g')]"
# execute the python script in the background and wait for it to terminate
python ./.git/hooks/git_changelog_hook.py --commit "$COMMIT" --target "$CHANGELOG_FILE" &
wait %1

# amend the changelog file to the last commit
git add $CHANGELOG_FILE
git commit --amend --no-edit
